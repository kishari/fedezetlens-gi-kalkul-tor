package MABISZCalculateRules

import hu.dbx.ws.model.facts.*;
import hu.dbx.ws.model.*;
import java.util.Date;
import org.joda.time.DateTime;
import org.joda.time.Days;
import java.util.ArrayList;
import java.math.BigDecimal;

function boolean isNullInt(Integer i) {
		return (i == null || i == 0);
}

function int getYear(Date d) {
	if (d != null) {		
		DateTime date = new DateTime(d);
		return date.getYear();
	}
	return 0;	
}

function boolean isBetween(Integer lowerBound, Integer upperBound, Integer value) {
	if ( value == null ) {
		return false;
	}
		if ( value == -1 ) {
		value = 0;
	}
 		return (lowerBound <= value && upperBound >= value);
}

function int daysBetween(Date s, Date e) {	
	return Days.daysBetween(new DateTime(s), new DateTime(e)).getDays() + 1;
}


rule "2010-es napidij beallitas (szemelygepkocsi)"
	agenda-group "calculate"
	salience -10
	no-loop
	when
		$c1: Constant( name == "TC_SZEMELYGEPJARMU")
		$q : Query()
		$v : Vehicle( typeCode == $c1.value )
		$b : CarBaseTariffDef( )
		$p : Premium( year == 2010 )
		eval ( isBetween($b.getCubicCapacityMin(), $b.getCubicCapacityMax(), $v.getCubicCapacity() ) )
		eval ( $b.isValid( $q.getStartDate() ) )
		eval ( getYear( $q.getStartDate() ) == $p.getYear() )
	then
		$p.setDailyPremium($b.getValue());
end

rule " 2010 utáni napidij beallitas (szemelygepkocsi)"
	agenda-group "calculate"
	salience -10
	lock-on-active
	when
		$c1: Constant( name == "TC_SZEMELYGEPJARMU")
		$q : Query( )
		$v : Vehicle( typeCode == $c1.value )
		$b : CarBaseTariffDef( )
		$p : Premium( year != 2010 )
		eval ( isBetween($b.getPowerMin(), $b.getPowerMax(), $v.getMaximumNettoPower() ) )
		eval ( $b.isValid( new DateTime($p.getYear(), 1, 1, 0, 0, 0, 0).toDate() ) )
		eval ( getYear( $q.getEndDate() ) >= $p.getYear() )
	then
		$p.setDailyPremium($b.getValue());
end

rule "premium napok számolása (intervallum eleje)"
    agenda-group "calculate"
	salience -30
	lock-on-active
    when
	    $q : Query()
	    $p : Premium()
	    eval ( getYear( $q.getStartDate() ) == $p.getYear() )
	    eval ( getYear( $q.getStartDate() ) != getYear( $q.getEndDate() ) )

	then
	    $p.setNumOfDays(daysBetween($q.getStartDate(), new DateTime($p.getYear(), 12, 31, 23, 59, 59, 999).toDate() ));

end

rule "premium napok számolása (intervallum vege)"
    agenda-group "calculate"
	salience -30
    lock-on-active
	when
	    $q : Query()
	    $p : Premium()
	    eval ( getYear( $q.getEndDate() ) == $p.getYear() )
	    eval ( getYear( $q.getStartDate() ) != getYear( $q.getEndDate() ) )

	then
	    $p.setNumOfDays(daysBetween(new DateTime($p.getYear(), 1, 1, 0, 0, 0, 0).toDate(), $q.getEndDate() ));

end

rule "premium napok számolása (intervallum kozepe)"
    agenda-group "calculate"
	salience -30
    lock-on-active
	when
	    $q : Query()
	    $p : Premium()
	    eval ( getYear( $q.getStartDate() ) != $p.getYear() )
	    eval ( getYear( $q.getEndDate() ) != $p.getYear() )

	then
	    $p.setNumOfDays(daysBetween(new DateTime($p.getYear(), 1, 1, 0, 0, 0, 0).toDate(), new DateTime($p.getYear(), 12, 31, 23, 59, 59, 999).toDate() ));

end

rule "premium napok számolása (startYear = endYear)"
    agenda-group "calculate"
	salience -30
    lock-on-active
	when
	    $q : Query()
	    $p : Premium()
	    eval ( getYear( $q.getEndDate() ) == $p.getYear() )
	    eval ( getYear( $q.getStartDate() ) == getYear( $q.getEndDate() ) )

	then
	    $p.setNumOfDays(daysBetween($q.getStartDate(), $q.getEndDate() ));

end