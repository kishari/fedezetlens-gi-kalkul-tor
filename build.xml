<project name="mabisz" basedir="." default="deploy">
	<dirname property="mabisz.basedir" file="${ant.file.mabisz}"/>
	<!--<property file="${mabisz.basedir}/local.properties"/>-->
	<property file="${mabisz.basedir}/build.properties"/>
	<property name="web" value="${mabisz.basedir}/web"/>
	<property name="lib" value="${mabisz.basedir}/lib"/>
	<property name="resources" value="${mabisz.basedir}/resources"/>
	<property name="web.web-inf" value="${web}/WEB-INF"/>
	<property name="web.web-inf.classes" value="${web.web-inf}/classes"/>
	<property name="web.web-inf.lib" value="${web.web-inf}/lib"/>
	<property name="src" value="${mabisz.basedir}/src/main/java"/>
	<property name="src.rules" value="${mabisz.basedir}/src/main/rules"/>
	<property name="target" value="${mabisz.basedir}/target"/>
	<property name="target.dist" value="${target}/dist"/>
	<!--<property name="mabisz-autodeploy-dir" value="${glassfish.home}/glassfish/domains/${mabisz.domain}/autodeploy" />-->
	<property name="services-autodeploy-dir" value="${glassfish.home}/glassfish/domains/${services.domain}/autodeploy" />
	<!--<property name="mabisz.domain.lib.classes" value="${glassfish.home}/glassfish/domains/${mabisz.domain}/lib/classes" />-->
	<property name="services.domain.lib.classes" value="${glassfish.home}/glassfish/domains/${services.domain}/lib/classes" />
    <property name="bin" value="${mabisz.basedir}/bin" />
	
	<property name="mabisz.warname" value="mabisz.war"/>
	<property name="mabisz.earname" value="mabisz.ear"/>
	<property name="mabisz.earfile" value="${target.dist}/${mabisz.earname}"/>
	<property name="mabisz.warfile" value="${target.dist}/${mabisz.warname}"/>
	<property name="log4j.propfile" value="${resources}/log4j.properties"/>
	<property name="verbose" value="false"/>

	<path id="classpath">
		<fileset dir="${lib}" includes="*.jar" />
		<fileset dir="${web.web-inf.lib}" includes="*.jar" />
	</path>

	<target name="clean">
		<tstamp />
		<delete dir="${target}" />
		<delete dir="${web.web-inf.classes}" />
	</target>

	<target name="init">
		<tstamp />
		<mkdir dir="${web.web-inf.classes}" />
		<mkdir dir="${target}" />
		<mkdir dir="${target.dist}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<javac destdir="${web.web-inf.classes}" debug="true" verbose="${verbose}" classpathref="classpath">
			<!--<compilerarg value="-Xlint"/>-->
			<src path="${src}" />
		</javac>
	</target>

	<target name="war" description="create war file" depends="compile">
		 <copy todir="${web.web-inf.classes}">
		    <fileset dir="${src}">
		      <exclude name="**/*.java"/>
		    </fileset>
		  </copy>
		 <copy todir="${web.web-inf.lib}">
		    <fileset dir="${lib}">
		      <exclude name="**/javaee-api-6.0.jar"/>
		    </fileset>
		 </copy>
		 <copy todir="${web.web-inf.classes}">
			<fileset dir="${src.rules}"/>
		</copy>
		<copy file="${log4j.propfile}" todir="${web.web-inf.classes}"/>
		<jar destfile="${mabisz.warfile}" duplicate="preserve">
			<fileset dir="${web}" />
		</jar>
	</target>		
	<target name="deploy" depends="war">
			<copy file="${log4j.propfile}" todir="${services.domain.lib.classes}" />
			<copy file="${mabisz.warfile}" todir="${services-autodeploy-dir}" />
	</target>

    	<target name="copy_rules">
			<copy todir="${bin}">
		    <fileset dir="${src.rules}"/>
		  </copy>
	</target>
</project>
